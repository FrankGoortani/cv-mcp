version: '3.8'

services:
  cv-mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
    image: cv-mcp:latest
    container_name: cv-mcp-server
    # Enhanced restart policy with improved settings
    restart: unless-stopped
    # Add grace period for clean shutdowns - especially important for Node.js
    stop_grace_period: 30s
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - REQUEST_TIMEOUT=120000
      - PING_INTERVAL=60000
    # Enhanced healthcheck configuration more suitable for Synology NAS
    healthcheck:
      # More comprehensive test command that validates the endpoint returns correct status
      test: ["CMD", "curl", "-f", "http://localhost:3001/health", "||", "exit", "1"]
      # Reduced frequency to decrease load on Synology NAS
      interval: 60s
      # Increased timeout for slower Synology hardware
      timeout: 15s
      # More retries before considering unhealthy
      retries: 5
      # Longer start period to account for slower startup on NAS
      start_period: 60s
    volumes:
      - ./media:/usr/src/app/media
    deploy:
      resources:
        limits:
          memory: 1024M
        reservations:
          memory: 512M
      # Improved restart policy at deploy level
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 5
        window: 120s
    # Enhanced logging for better troubleshooting on Synology
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
        # Add timestamps for better log correlation
        timestamps: "true"
        # Compress logs to save space on Synology
        compress: "true"
    # Add Synology-specific optimizations
    sysctls:
      # Optimize network settings for stability
      - net.ipv4.tcp_keepalive_time=600
      - net.ipv4.tcp_keepalive_intvl=60
      - net.ipv4.tcp_keepalive_probes=5
    # Memory optimization for constrained environments
    mem_swappiness: 60
